name: Update Azure Icons

on:
  schedule:
    # Run weekly on Sundays at 6 AM UTC
    - cron: '0 6 * * 0'
  workflow_dispatch: # Allow manual trigger

permissions:
  contents: write
  pull-requests: write

jobs:
  update-icons:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: icon-viewer/package-lock.json

    - name: Update Azure Icons
      id: update
      run: |
        node scripts/update-icons.js > update-output.log 2>&1
        if [ $? -eq 0 ]; then
          echo "success=true" >> $GITHUB_OUTPUT
          # Extract results from the script output
          if grep -q "Changes detected: true" update-output.log; then
            echo "changes_detected=true" >> $GITHUB_OUTPUT
            current_count=$(grep "Icon count:" update-output.log | sed 's/.*Icon count: \([0-9]*\) -> \([0-9]*\).*/\1/')
            new_count=$(grep "Icon count:" update-output.log | sed 's/.*Icon count: \([0-9]*\) -> \([0-9]*\).*/\2/')
            echo "current_count=$current_count" >> $GITHUB_OUTPUT
            echo "new_count=$new_count" >> $GITHUB_OUTPUT
          else
            echo "changes_detected=false" >> $GITHUB_OUTPUT
            current_count=$(grep "Icon count:" update-output.log | sed 's/.*Icon count: \([0-9]*\) -> \([0-9]*\).*/\1/')
            echo "current_count=$current_count" >> $GITHUB_OUTPUT
            echo "new_count=$current_count" >> $GITHUB_OUTPUT
          fi
        else
          echo "success=false" >> $GITHUB_OUTPUT
          echo "changes_detected=false" >> $GITHUB_OUTPUT
        fi
        
        # Show the output
        cat update-output.log

    - name: Configure Git
      if: steps.update.outputs.success == 'true' && steps.update.outputs.changes_detected == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    - name: Commit and push changes
      if: steps.update.outputs.success == 'true' && steps.update.outputs.changes_detected == 'true'
      run: |
        # Add only the relevant files
        git add Azure_Public_Service_Icons/
        git add icon-viewer/src/iconIndex.json
        git add icon-viewer/src/categories.json
        
        # Create commit message with details
        COMMIT_MSG="chore: update Azure icons from Microsoft (${{ steps.update.outputs.current_count }} -> ${{ steps.update.outputs.new_count }} icons)
        
        - Downloaded from: https://arch-center.azureedge.net/icons/Azure_Public_Service_Icons_V21.zip
        - Previous icon count: ${{ steps.update.outputs.current_count }}
        - New icon count: ${{ steps.update.outputs.new_count }}
        - Updated on: $(date -u +'%Y-%m-%d %H:%M:%S UTC')
        
        This is an automated update to keep the icons in sync with Microsoft's latest release."
        
        # Commit changes
        git commit -m "$COMMIT_MSG"
        
        # Push to main branch
        git push origin main
        
        echo "Changes committed and pushed successfully"

    - name: Create summary
      if: always()
      run: |
        echo "## Azure Icons Update Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ steps.update.outputs.success }}" == "true" ]; then
          if [ "${{ steps.update.outputs.changes_detected }}" == "true" ]; then
            echo "✅ **Changes detected and applied**" >> $GITHUB_STEP_SUMMARY
            echo "- Previous icon count: ${{ steps.update.outputs.current_count }}" >> $GITHUB_STEP_SUMMARY
            echo "- New icon count: ${{ steps.update.outputs.new_count }}" >> $GITHUB_STEP_SUMMARY
            echo "- Icons have been updated and committed to the repository" >> $GITHUB_STEP_SUMMARY
          else
            echo "ℹ️ **No changes detected**" >> $GITHUB_STEP_SUMMARY
            echo "- Current icon count: ${{ steps.update.outputs.current_count }}" >> $GITHUB_STEP_SUMMARY
            echo "- Icons are up to date with Microsoft's latest release" >> $GITHUB_STEP_SUMMARY
          fi
        else
          echo "❌ **Update failed**" >> $GITHUB_STEP_SUMMARY
          echo "- Check the workflow logs for details" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Source: https://arch-center.azureedge.net/icons/Azure_Public_Service_Icons_V21.zip" >> $GITHUB_STEP_SUMMARY
